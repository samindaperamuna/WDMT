/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import model.MessageObserver;
import model.MessageSubject;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import model.DeflectionRecord;

public class Home extends javax.swing.JFrame implements MessageSubject {
    
    private final List<MessageObserver> messageObserverList;

    // JFrames corresponding to the menu buttons.
    private final Setup setup = new Setup();
    private final EnterData enterData = new EnterData();
    private DeflectionCurve deflectioncurve;
    private ReadingCheck readingCheck;
    private HorizontalPlaneCurve horizontalPlaneCurve;
    private VerticalPlaneCurve verticalPlaneCurve;
    
    private Map<Integer, DeflectionRecord> records;

    /**
     * Creates new form Home.
     */
    public Home() {
        initComponents();
        messageObserverList = new ArrayList<>();
        
        Border redBorder = BorderFactory.createLineBorder(Color.white, 2, true);
        this.menuPanel.setBorder(redBorder);
        
        CurrentDate();
    }
    
    public void setRecords(Map<Integer, DeflectionRecord> records) {
        this.records = records;
    }

    /**
     * Set the date and time on the form.
     */
    private void CurrentDate() {
        
        Thread clock = new Thread() {
            
            @Override
            public void run() {
                for (;;) {
                    Calendar cal = new GregorianCalendar();
                    
                    int second = cal.get(Calendar.SECOND);
                    int minitue = cal.get(Calendar.MINUTE);
                    int hour = cal.get(Calendar.HOUR);
                    timeLabel.setText(hour + ":" + (minitue) + ":" + second);
                    
                    int month = cal.get(Calendar.MONTH);
                    int year = cal.get(Calendar.YEAR);
                    int day = cal.get(Calendar.DAY_OF_MONTH);
                    dateLabel.setText(year + "/" + (month + 1) + "/" + day);
                    
                    try {
                        sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        };
        
        clock.start();
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuPanel = new javax.swing.JPanel();
        closeButtonLabel = new javax.swing.JLabel();
        minimizeButtonLabel = new javax.swing.JLabel();
        setupButton = new javax.swing.JButton();
        readingCheckButton = new javax.swing.JButton();
        enterDataButton = new javax.swing.JButton();
        deflectionCurveButton = new javax.swing.JButton();
        verticalPlaneButton = new javax.swing.JButton();
        horizontalPlaneButton = new javax.swing.JButton();
        backgroundLabel = new javax.swing.JLabel();
        mainDeskContainer = new javax.swing.JPanel();
        maindesk = new javax.swing.JDesktopPane();
        sliderPanel = new javax.swing.JPanel();
        leftArrowButton = new javax.swing.JButton();
        rightArrowButton = new javax.swing.JButton();
        sliderContainer = new javax.swing.JPanel();
        tempPanel = new javax.swing.JPanel();
        tempButton = new javax.swing.JButton();
        calulatorPanel = new javax.swing.JPanel();
        calculatorButton = new javax.swing.JButton();
        unitsPanel = new javax.swing.JPanel();
        unitsButton = new javax.swing.JButton();
        statusContatiner = new javax.swing.JPanel();
        statusPanel = new javax.swing.JPanel();
        hoverBarTextBox = new javax.swing.JTextField();
        notificationsPanel = new javax.swing.JPanel();
        timeLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        notificationButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Web Deflection and Mapping Tool");
        setBackground(new java.awt.Color(0, 0, 102));
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);
        setSize(new java.awt.Dimension(1200, 932));

        menuPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 0)));
        menuPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        closeButtonLabel.setToolTipText("<html><b><font color=red>"+ "Exit Or Close Application Window" + "</font></b></html>");
        closeButtonLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        closeButtonLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeButtonLabelMouseClicked(evt);
            }
        });
        menuPanel.add(closeButtonLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(977, 0, 50, 60));

        minimizeButtonLabel.setToolTipText("<html><b><font color=red>"+ "Minimize Application Window" + "</font></b></html>");
        minimizeButtonLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimizeButtonLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeButtonLabelMouseClicked(evt);
            }
        });
        menuPanel.add(minimizeButtonLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(924, 0, 50, 60));

        setupButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        setupButton.setText("SET UP");
        setupButton.setToolTipText("<html><b><font color=red>"+ "Press And Navigate To ADDTANKS Window" + "</font></b></html>");
        setupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setupButtonActionPerformed(evt);
            }
        });
        menuPanel.add(setupButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 80, 40));

        readingCheckButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        readingCheckButton.setText("READING CHECK");
        readingCheckButton.setToolTipText("<html><b><font color=red>"+ "Press And Navigate To MGO/MDO Bunker Tanks Window" + "</font></b></html>");
        readingCheckButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readingCheckButtonActionPerformed(evt);
            }
        });
        menuPanel.add(readingCheckButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, -1, 40));

        enterDataButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        enterDataButton.setText("ENTER DATA");
        enterDataButton.setToolTipText("<html><b><font color=red>"+ "Press And Navigate To HSFO/LSFO Bunker Tanks Window" + "</font></b></html>");
        enterDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterDataButtonActionPerformed(evt);
            }
        });
        menuPanel.add(enterDataButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 110, 40));

        deflectionCurveButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        deflectionCurveButton.setText("DEFLECTION CURVE");
        deflectionCurveButton.setToolTipText("<html><b><font color=red>"+ "Press And Navigate To MGO/MDO Bunker Tanks Window" + "</font></b></html>");
        deflectionCurveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deflectionCurveButtonActionPerformed(evt);
            }
        });
        menuPanel.add(deflectionCurveButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 10, 150, 40));

        verticalPlaneButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        verticalPlaneButton.setText("VERTICAL PLANE");
        verticalPlaneButton.setToolTipText("<html><b><font color=red>"+ "Press And Navigate To Engine Room Daily Sounding Tanks Window" + "</font></b></html>");
        verticalPlaneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verticalPlaneButtonActionPerformed(evt);
            }
        });
        menuPanel.add(verticalPlaneButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 10, 140, 40));

        horizontalPlaneButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        horizontalPlaneButton.setText("HORIZONTAL PLANE");
        horizontalPlaneButton.setToolTipText("<html><b><font color=red>"+ "Press And Navigate To Help Window" + "</font></b></html>");
        horizontalPlaneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horizontalPlaneButtonActionPerformed(evt);
            }
        });
        menuPanel.add(horizontalPlaneButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 10, 160, 40));

        backgroundLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/main.png"))); // NOI18N
        backgroundLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        menuPanel.add(backgroundLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1030, 60));

        mainDeskContainer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        maindesk.setPreferredSize(new java.awt.Dimension(1200, 6));

        javax.swing.GroupLayout maindeskLayout = new javax.swing.GroupLayout(maindesk);
        maindesk.setLayout(maindeskLayout);
        maindeskLayout.setHorizontalGroup(
            maindeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );
        maindeskLayout.setVerticalGroup(
            maindeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 690, Short.MAX_VALUE)
        );

        mainDeskContainer.add(maindesk, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 690));

        sliderPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        leftArrowButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/arrowleft.png"))); // NOI18N
        leftArrowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftArrowButtonActionPerformed(evt);
            }
        });
        sliderPanel.add(leftArrowButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 16, 60));

        rightArrowButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/arrowright.png"))); // NOI18N
        rightArrowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightArrowButtonActionPerformed(evt);
            }
        });
        sliderPanel.add(rightArrowButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 0, 16, 60));

        sliderContainer.setLayout(new java.awt.CardLayout());

        tempButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/temperature.png"))); // NOI18N
        tempButton.setToolTipText("<html><b><font color=red>"+ "Temperature Coverter Tool" + "</font></b></html>");

        javax.swing.GroupLayout tempPanelLayout = new javax.swing.GroupLayout(tempPanel);
        tempPanel.setLayout(tempPanelLayout);
        tempPanelLayout.setHorizontalGroup(
            tempPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 110, Short.MAX_VALUE)
            .addGroup(tempPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(tempPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(tempButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        tempPanelLayout.setVerticalGroup(
            tempPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
            .addGroup(tempPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(tempPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(tempButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        sliderContainer.add(tempPanel, "card4");

        calculatorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/calculator.png"))); // NOI18N
        calculatorButton.setToolTipText("<html><b><font color=red>"+ "Simple Numeric Calculator" + "</font></b></html>");

        javax.swing.GroupLayout calulatorPanelLayout = new javax.swing.GroupLayout(calulatorPanel);
        calulatorPanel.setLayout(calulatorPanelLayout);
        calulatorPanelLayout.setHorizontalGroup(
            calulatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 110, Short.MAX_VALUE)
            .addGroup(calulatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(calulatorPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(calculatorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        calulatorPanelLayout.setVerticalGroup(
            calulatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
            .addGroup(calulatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(calulatorPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(calculatorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        sliderContainer.add(calulatorPanel, "card2");

        unitsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/units.png"))); // NOI18N
        unitsButton.setToolTipText("<html><b><font color=red>"+ "Unit Convertor Tool" + "</font></b></html>");

        javax.swing.GroupLayout unitsPanelLayout = new javax.swing.GroupLayout(unitsPanel);
        unitsPanel.setLayout(unitsPanelLayout);
        unitsPanelLayout.setHorizontalGroup(
            unitsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 110, Short.MAX_VALUE)
            .addGroup(unitsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(unitsPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(unitsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        unitsPanelLayout.setVerticalGroup(
            unitsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
            .addGroup(unitsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(unitsPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(unitsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        sliderContainer.add(unitsPanel, "card3");

        sliderPanel.add(sliderContainer, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 0, 110, 60));

        statusContatiner.setBackground(new java.awt.Color(153, 0, 102));
        statusContatiner.setPreferredSize(new java.awt.Dimension(1200, 36));
        statusContatiner.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        statusPanel.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());
        statusPanel.setToolTipText("");
        statusPanel.setOpaque(false);

        hoverBarTextBox.setEditable(false);
        hoverBarTextBox.setBackground(new java.awt.Color(153, 0, 102));
        hoverBarTextBox.setFont(new java.awt.Font("Californian FB", 1, 14)); // NOI18N
        hoverBarTextBox.setForeground(new java.awt.Color(255, 255, 255));
        hoverBarTextBox.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        hoverBarTextBox.setToolTipText("<html><b><font color=red>"+ "Help Text Pannel" + "</font></b></html>");
        hoverBarTextBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(hoverBarTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 949, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(hoverBarTextBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        statusContatiner.add(statusPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 950, 36));

        notificationsPanel.setBorder(null);
        notificationsPanel.setToolTipText("<html><b><font color=red>"+ "System Current Date & Time" + "</font></b></html>");
        notificationsPanel.setOpaque(false);
        notificationsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        timeLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        timeLabel.setForeground(new java.awt.Color(255, 255, 255));
        timeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        notificationsPanel.add(timeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 70, 20));

        dateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dateLabel.setForeground(new java.awt.Color(255, 255, 255));
        notificationsPanel.add(dateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 80, 20));

        statusContatiner.add(notificationsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(958, 0, 180, 36));

        notificationButton.setBackground(new java.awt.Color(255, 255, 204));
        notificationButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        notificationButton.setForeground(new java.awt.Color(102, 0, 0));
        notificationButton.setText("M");
        notificationButton.setToolTipText("<html><b><font color=red>"+ "Press And Navigate To Application Main Window" + "</font></b></html>");
        notificationButton.setAlignmentY(0.0F);
        notificationButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        statusContatiner.add(notificationButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 0, 53, 36));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(mainDeskContainer, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sliderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(statusContatiner, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sliderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainDeskContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(statusContatiner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setSize(new java.awt.Dimension(1205, 820));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void minimizeButtonLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeButtonLabelMouseClicked
        this.setState(1);
    }//GEN-LAST:event_minimizeButtonLabelMouseClicked

    private void closeButtonLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeButtonLabelMouseClicked
        System.exit(0);
    }//GEN-LAST:event_closeButtonLabelMouseClicked

    private void setupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setupButtonActionPerformed
        maindesk.removeAll();
        maindesk.repaint();
        setup.setResizable(false);
        setup.setSize(maindesk.getWidth(), maindesk.getHeight());
        setup.setLocation(0, 0);
        setup.setVisible(true);
        maindesk.add(setup);

        // Add Form as an observer.
        this.messageObserverList.add(setup);
        
        setup.show();
    }//GEN-LAST:event_setupButtonActionPerformed

    private void enterDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterDataButtonActionPerformed
        maindesk.removeAll();
        maindesk.repaint();
        enterData.setResizable(false);
        enterData.setSize(maindesk.getWidth(), maindesk.getHeight());
        enterData.setLocation(0, 0);
        enterData.setVisible(true);
        maindesk.add(enterData);

        // Add form as an observer.
        this.messageObserverList.add(enterData);
        
        enterData.show();
    }//GEN-LAST:event_enterDataButtonActionPerformed

    private void deflectionCurveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deflectionCurveButtonActionPerformed
        
        if (this.records != null && !this.records.isEmpty()) {
            
            maindesk.removeAll();
            maindesk.repaint();
            deflectioncurve =  new DeflectionCurve(records);
            deflectioncurve.setResizable(false);
            deflectioncurve.setSize(maindesk.getWidth(), maindesk.getHeight());
            deflectioncurve.setLocation(0, 0);
            deflectioncurve.setVisible(true);
            maindesk.add(deflectioncurve);

            // Add form as an observer.
            this.messageObserverList.add(deflectioncurve);
            
            deflectioncurve.show();
        } else {
            JOptionPane.showMessageDialog(this, "No data to diplay", "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deflectionCurveButtonActionPerformed

    private void verticalPlaneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verticalPlaneButtonActionPerformed
        if (this.records != null && !this.records.isEmpty()) {
            
            maindesk.removeAll();
            maindesk.repaint();
            verticalPlaneCurve =  new VerticalPlaneCurve(records);
            verticalPlaneCurve.setResizable(false);
            verticalPlaneCurve.setSize(maindesk.getWidth(), maindesk.getHeight());
            verticalPlaneCurve.setLocation(0, 0);
            verticalPlaneCurve.setVisible(true);
            maindesk.add(verticalPlaneCurve);

            // Add form as an observer.
            this.messageObserverList.add(verticalPlaneCurve);
            
            verticalPlaneCurve.show();
        } else {
            JOptionPane.showMessageDialog(this, "No data to diplay", "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_verticalPlaneButtonActionPerformed

    private void horizontalPlaneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horizontalPlaneButtonActionPerformed
        if (this.records != null && !this.records.isEmpty()) {
            
            maindesk.removeAll();
            maindesk.repaint();
            horizontalPlaneCurve =  new HorizontalPlaneCurve(records);
            horizontalPlaneCurve.setResizable(false);
            horizontalPlaneCurve.setSize(maindesk.getWidth(), maindesk.getHeight());
            horizontalPlaneCurve.setLocation(0, 0);
            horizontalPlaneCurve.setVisible(true);
            maindesk.add(horizontalPlaneCurve);

            // Add form as an observer.
            this.messageObserverList.add(horizontalPlaneCurve);
            
            horizontalPlaneCurve.show();
        } else {
            JOptionPane.showMessageDialog(this, "No data to diplay", "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_horizontalPlaneButtonActionPerformed

    private void leftArrowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftArrowButtonActionPerformed
        CardLayout cl = (CardLayout) (sliderContainer.getLayout());
        cl.previous(sliderContainer);
    }//GEN-LAST:event_leftArrowButtonActionPerformed

    private void readingCheckButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readingCheckButtonActionPerformed
        if (this.records != null && !this.records.isEmpty()) {
            
            maindesk.removeAll();
            maindesk.repaint();
            readingCheck =  new ReadingCheck(records);
            readingCheck.setResizable(false);
            readingCheck.setSize(maindesk.getWidth(), maindesk.getHeight());
            readingCheck.setLocation(0, 0);
            readingCheck.setVisible(true);
            maindesk.add(readingCheck);

            // Add form as an observer.
            this.messageObserverList.add(readingCheck);
            
            readingCheck.show();
        } else {
            JOptionPane.showMessageDialog(this, "No data to diplay", "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_readingCheckButtonActionPerformed

    private void rightArrowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightArrowButtonActionPerformed
        CardLayout cl = (CardLayout) (sliderContainer.getLayout());
        cl.next(sliderContainer);
    }//GEN-LAST:event_rightArrowButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundLabel;
    private javax.swing.JButton calculatorButton;
    private javax.swing.JPanel calulatorPanel;
    private javax.swing.JLabel closeButtonLabel;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JButton deflectionCurveButton;
    private javax.swing.JButton enterDataButton;
    private javax.swing.JButton horizontalPlaneButton;
    public static javax.swing.JTextField hoverBarTextBox;
    private javax.swing.JButton leftArrowButton;
    private javax.swing.JPanel mainDeskContainer;
    public static javax.swing.JDesktopPane maindesk;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JLabel minimizeButtonLabel;
    private javax.swing.JButton notificationButton;
    private javax.swing.JPanel notificationsPanel;
    private javax.swing.JButton readingCheckButton;
    private javax.swing.JButton rightArrowButton;
    public static javax.swing.JButton setupButton;
    private javax.swing.JPanel sliderContainer;
    private javax.swing.JPanel sliderPanel;
    private javax.swing.JPanel statusContatiner;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JButton tempButton;
    private javax.swing.JPanel tempPanel;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JButton unitsButton;
    private javax.swing.JPanel unitsPanel;
    private javax.swing.JButton verticalPlaneButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void addObserver(MessageObserver messageObserver) {
        messageObserverList.add(messageObserver);
    }
    
    @Override
    public void removeObserver(MessageObserver messageObserver) {
        messageObserverList.remove(messageObserver);
    }
    
    @Override
    public void notifyObservers() {
        for (MessageObserver observer : messageObserverList) {
            observer.update();
        }
    }
}
